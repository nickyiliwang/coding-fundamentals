{"index.js":"function smallestCommons(arr) {\n//all numbers in between arr\nlet conA = Array.from(Array(Math.max(...arr) + 1).keys()).slice(Math.min(...arr));\n//prime factors for each numbers\nlet result = conA.map(x => {\nlet newArr = [], i;\nfor (i = 2; i <= x; i++) {\n  while ((x % i) === 0) {\n    newArr.push(i);\n      x /= i;\n    }\n  }\nreturn newArr;\n});\n\n//unique numbers to check occurence\nlet resultStr = [].concat(...result); \nlet uniqueArr = [...new Set(resultStr)];\n//unique numbers to check\nlet beans = [];\nuniqueArr.map(uni => {\n//filter everything thats not the unique number\nlet end = result.map(x => x.filter(n => n == uni));\nlet countArr = end.map(en => en.length);\n//find the max count and return the index of the unique number\nlet count = countArr.indexOf(Math.max(...countArr));\n//get only the array containing the unique number and push it into master arr\nlet cool = end.slice(count, count+1);\nbeans.push(cool);\n});\n\nlet newxD = [].concat(...beans);\nlet final = [].concat(...newxD);\nlet LCM = final.reduce((a , b) => a * b);\n\n\nreturn LCM;\n}\n\nsmallestCommons([23, 18]);\n\n//for each number in the nest arrays, I want to match each number with all the other nest arrays to check occurence\n\n\n\n//[ [ 2, 3, 3 ], [ 19 ], [ 2, 2, 5 ], [ 3, 7 ], [ 2, 11 ], [ 23 ] ]\n//[ 2, 3, 19, 5, 7, 11, 23 ]"}